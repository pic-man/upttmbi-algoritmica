"""
Ejemplo Complejo - Estructuras de Decisi√≥n
===========================================

Este ejemplo muestra el uso de m√∫ltiples condiciones combinadas
con operadores l√≥gicos (and, or, not).

Objetivo: Sistema de aprobaci√≥n de pr√©stamo bancario.
"""

print("="*60)
print("SISTEMA DE EVALUACI√ìN DE PR√âSTAMO BANCARIO")
print("="*60)

# Constantes del sistema
EDAD_MINIMA = 18
EDAD_MAXIMA = 65
INGRESO_MINIMO = 1000
INGRESO_MINIMO_SIN_AVAL = 2000
MONTO_MAXIMO_SIN_AVAL = 5000

# Recolectar informaci√≥n del solicitante
print("\nPor favor, completa los siguientes datos:\n")

nombre = input("Nombre completo: ")
edad = int(input("Edad: "))
ingreso_mensual = float(input("Ingreso mensual (USD): "))
tiene_deudas = input("¬øTienes deudas activas? (s/n): ").lower() == "s"
tiene_aval = input("¬øTienes un aval? (s/n): ").lower() == "s"
monto_solicitado = float(input("Monto del pr√©stamo solicitado (USD): "))

# Variables para el resultado
aprobado = False
razon = []
recomendaciones = []

print("\n" + "="*60)
print("EVALUANDO SOLICITUD...")
print("="*60 + "\n")

# Validaci√≥n 1: Edad
if edad < EDAD_MINIMA or edad > EDAD_MAXIMA:
    razon.append(f"‚ùå Edad fuera del rango ({EDAD_MINIMA}-{EDAD_MAXIMA} a√±os)")
else:
    print(f"‚úÖ Edad v√°lida: {edad} a√±os")

# Validaci√≥n 2: Ingresos
if ingreso_mensual < INGRESO_MINIMO:
    razon.append(f"‚ùå Ingreso insuficiente (m√≠nimo: ${INGRESO_MINIMO})")
else:
    print(f"‚úÖ Ingreso v√°lido: ${ingreso_mensual}")

# Validaci√≥n 3: Deudas
if tiene_deudas:
    razon.append("‚ùå Tienes deudas activas")
    recomendaciones.append("Liquida tus deudas antes de solicitar un nuevo pr√©stamo")
else:
    print("‚úÖ Sin deudas activas")

# Validaci√≥n 4: Monto y aval
if monto_solicitado > MONTO_MAXIMO_SIN_AVAL and not tiene_aval:
    razon.append(f"‚ùå Monto muy alto sin aval (m√°ximo sin aval: ${MONTO_MAXIMO_SIN_AVAL})")
    recomendaciones.append("Consigue un aval o solicita un monto menor")
elif monto_solicitado > MONTO_MAXIMO_SIN_AVAL and tiene_aval:
    print(f"‚úÖ Monto alto pero tienes aval: ${monto_solicitado}")
else:
    print(f"‚úÖ Monto dentro del rango: ${monto_solicitado}")

# Validaci√≥n 5: Ingreso suficiente para el monto sin aval
if not tiene_aval and ingreso_mensual < INGRESO_MINIMO_SIN_AVAL:
    razon.append(f"‚ùå Sin aval se requiere ingreso m√≠nimo de ${INGRESO_MINIMO_SIN_AVAL}")
    recomendaciones.append("Consigue un aval o aumenta tus ingresos")

# Decisi√≥n final usando operadores l√≥gicos complejos
if (
    EDAD_MINIMA <= edad <= EDAD_MAXIMA and
    ingreso_mensual >= INGRESO_MINIMO and
    not tiene_deudas and
    (
        monto_solicitado <= MONTO_MAXIMO_SIN_AVAL or
        (monto_solicitado > MONTO_MAXIMO_SIN_AVAL and tiene_aval)
    ) and
    (
        tiene_aval or
        (not tiene_aval and ingreso_mensual >= INGRESO_MINIMO_SIN_AVAL)
    )
):
    aprobado = True

# Mostrar resultado
print("\n" + "="*60)
print("RESULTADO DE LA EVALUACI√ìN")
print("="*60 + "\n")

print(f"Solicitante: {nombre}")
print(f"Monto solicitado: ${monto_solicitado}")
print()

if aprobado:
    print("üéâ ¬°PR√âSTAMO APROBADO! üéâ")
    print("\nDetalles:")
    print(f"  ‚Ä¢ Monto: ${monto_solicitado}")
    
    # Calcular tasa de inter√©s seg√∫n perfil
    if tiene_aval and ingreso_mensual >= INGRESO_MINIMO_SIN_AVAL:
        tasa_interes = 8.5
        print(f"  ‚Ä¢ Tasa de inter√©s: {tasa_interes}% (Perfil Premium)")
    elif tiene_aval or ingreso_mensual >= INGRESO_MINIMO_SIN_AVAL:
        tasa_interes = 12.0
        print(f"  ‚Ä¢ Tasa de inter√©s: {tasa_interes}% (Perfil Est√°ndar)")
    else:
        tasa_interes = 15.0
        print(f"  ‚Ä¢ Tasa de inter√©s: {tasa_interes}% (Perfil B√°sico)")
    
    # Calcular cuota mensual aproximada (12 meses)
    cuota_mensual = (monto_solicitado * (1 + tasa_interes / 100)) / 12
    print(f"  ‚Ä¢ Cuota mensual aproximada (12 meses): ${cuota_mensual:.2f}")
    
    print("\nPr√≥ximos pasos:")
    print("  1. Visita nuestra sucursal con tu identificaci√≥n")
    print("  2. Firma los documentos del pr√©stamo")
    print("  3. Recibe tu dinero en 24-48 horas")
    
else:
    print("‚ùå PR√âSTAMO NO APROBADO")
    print("\nRazones:")
    for r in razon:
        print(f"  {r}")
    
    if recomendaciones:
        print("\nRecomendaciones:")
        for rec in recomendaciones:
            print(f"  üí° {rec}")

print("\n" + "="*60)
print("Gracias por usar nuestro sistema")
print("="*60)

# AN√ÅLISIS DEL C√ìDIGO:
# 
# Este ejemplo combina:
# 1. M√∫ltiples condiciones con and/or
# 2. Anidaci√≥n controlada (m√°ximo 2 niveles)
# 3. Variables para almacenar resultados
# 4. Validaciones paso a paso con feedback
# 5. C√°lculos condicionales
#
# Nota: En un sistema real, esto se dividir√≠a en funciones
# para mejor legibilidad y mantenimiento.

# EJERCICIOS PARA PRACTICAR:
# 1. Agrega validaci√≥n de historial crediticio (bueno/regular/malo)
# 2. Implementa diferentes plazos de pago (6, 12, 24 meses)
# 3. Crea un sistema de puntos para clasificar el perfil del cliente
# 4. Refactoriza el c√≥digo usando funciones para cada validaci√≥n

